<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>iptables - 标签 - NEGOCES's Blog</title><link>https://negoces.github.io/tags/iptables/</link><description>iptables - 标签 - NEGOCES's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>negoces@163.com (NEGOCES)</managingEditor><webMaster>negoces@163.com (NEGOCES)</webMaster><lastBuildDate>Thu, 31 Dec 2020 17:29:57 +0800</lastBuildDate><atom:link href="https://negoces.github.io/tags/iptables/" rel="self" type="application/rss+xml"/><item><title>iptables详解</title><link>https://negoces.github.io/posts/16e870f5/</link><pubDate>Thu, 31 Dec 2020 17:29:57 +0800</pubDate><author>作者</author><guid>https://negoces.github.io/posts/16e870f5/</guid><description><![CDATA[<blockquote>
<p>iptables是运行在用户空间的应用软件，通过控制Linux内核netfilter模块，来管理网络数据包的处理和转发。在大部分Linux发行版中，可以通过手册页或<code>man iptables</code>获取用户手册。</p>
</blockquote>
<p>iptables、ip6tables等都使用Xtables框架。存在“表（tables）”、“链（chain）”和“规则（rules）”三个层面。</p>
<h2 id="数据包走向">数据包走向</h2>
<div class="mermaid" id="id-1"></div>
<h2 id="表">表</h2>
<h3 id="filter表">filter表</h3>
<p>filter表是默认的表，如果不指明表则使用此表。其通常用于过滤数据包。其中的内建链包括：</p>
<ul>
<li>INPUT，输入链。发往本机的数据包通过此链。</li>
<li>OUTPUT，输出链。从本机发出的数据包通过此链。</li>
<li>FORWARD，转发链。本机转发的数据包通过此链。</li>
</ul>
<h3 id="nat表">nat表</h3>
<p>nat表如其名，用于地址转换操作。其中的内建链包括：</p>
<ul>
<li>PREROUTING，路由前链，在处理路由规则前通过此链，通常用于目的地址转换（DNAT）。</li>
<li>POSTROUTING，路由后链，完成路由规则后通过此链，通常用于源地址转换（SNAT）。</li>
<li>OUTPUT，输出链，类似PREROUTING，但是处理本机发出的数据包。</li>
</ul>
<h3 id="mangle表">mangle表</h3>
<p>mangle表用于处理数据包。其和nat表的主要区别在于，nat表侧重连接而mangle表侧重每一个数据包。[4]其中内建链列表如下。</p>
<ul>
<li>PREROUTING</li>
<li>OUTPUT</li>
<li>FORWARD</li>
<li>INPUT</li>
<li>POSTROUTING</li>
</ul>
<h3 id="raw表">raw表</h3>
<p>raw表用于处理异常，有如下两个内建链：</p>
<ul>
<li>PREROUTING</li>
<li>OUTPUT</li>
</ul>]]></description></item></channel></rss>